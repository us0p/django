Time Zones
When support for time zones is enabled, Django stores datetime information
in UTC in the database, uses time-zone-aware datetime objects internally, 
and translates them to the end user’s time zone in templates and forms.

Time zone support is enabled by default. To disable it, set USE_TZ = False
in your settings file.
Time zone support uses zoneinfo, which is part of the Python standard 
library from Python 3.9.

Naive and aware datetime objects
Python’s datetime.datetime objects have a tzinfo attribute that can be used
to store time zone information, represented as an instance of a subclass of
datetime.tzinfo. When this attribute is set and describes an offset, a 
datetime object is aware. Otherwise, it’s naive.

You can use is_aware() and is_naive() to determine whether datetimes are 
aware or naive.
When time zone support is disabled, Django uses naive datetime objects in 
local time.
When time zone support is enabled, Django uses time-zone-aware datetime 
objects.

Default time zone and current time zone
The default time zone is the time zone defined by the TIME_ZONE setting.
The current time zone is the time zone that’s used for rendering.
You should set the current time zone to the end user’s actual time zone 
with activate(). Otherwise, the default time zone is used.

Selecting the current time zone
The current time zone is the equivalent of the current locale for 
translations. However, there’s no equivalent of the Accept-Language HTTP 
header that Django could use to determine the user’s time zone 
automatically. Instead, Django provides time zone selection functions.
zoneinfo.available_timezones() provides a set of available timezones that 
you can use to build a map from likely locations to time zones.

Time zone aware input in forms
When you enable time zone support, Django interprets datetimes entered in 
forms in the current time zone and returns aware datetime objects in 
cleaned_data.
Converted datetimes that don’t exist or are ambiguous because they fall in
a DST transition will be reported as invalid values.

Time zone aware output in templates
When you enable time zone support, Django converts aware datetime objects 
to the current time zone when they’re rendered in templates. This behaves 
very much like format localization.

Django doesn’t convert naive datetime objects, because they could be 
ambiguous, and because your code should never produce naive datetimes when
time zone support is enabled. However, you can force conversion with 
template filters.
